{"version":3,"sources":["assets/mehwash.png","Home.js","About.js","Portfolio.js","Blog.js","Contact.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","Home","document","body","style","backgroundColor","Container","className","role","aria-label","src","mehwashImage","alt","id","data-rss","data-maxcols","data-layout","data-poststyle","data-readmore","data-buttonclass","data-offset","React","Component","About","Portfolio","Blog","Contact","NoMatch","Layout","props","children","Jumbotron","fluid","library","add","fab","faCheckSquare","faCoffee","HeaderWithRouter","withRouter","location","Navbar","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","activeKey","pathname","Item","Link","target","icon","App","Fragment","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b39226af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mehwash.23d278a4.png\";","import React from \"react\";\nimport {Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport mehwashImage from './assets/mehwash.png';\n\nconst Styles = styled.div`\n\timg {\n\t\theight: 250px;\n\n\t}\n\n\t.stamp {\n\t\twidth: fit-content;\n\tborder: 2px dashed #fff;\n\t\n}\n\n.stamp img {\n\theight: 250px;\n\tbackground: #fff;\n\tpadding:12px;\n}\n\n.center-align-div {\n\t    display: flex;\n    align-items: center;\n    text-align: center;\n}\n\np {\n\tfont-size: 1.5rem;\n}\n\nh1 {\n\tfont-size: 3rem;\n}\n`;\n\nexport class Home extends React.Component{\n\n\tconstructor(){\n\t\tsuper()\n\t\tdocument.body.style.backgroundColor = '#F0EDDA';\n\t}\n\t \n\tcomponentWillUnmount(){\n    \tdocument.body.style.backgroundColor = null;\n\t}\n\n\trender () { \n\t\treturn (\n\t\t\t<Styles>\n\t\t\t<Container>\n\t\t\t\t<div className=\"row center-align-div\">\n\t\t\t\t\t<div className=\"col-md-6 offset-md-1\">\n\t\t\t\t\t\t<h1>Hey, I'm Mehwash <span role=\"img\" aria-label=\"Hi\">ðŸ‘‹</span> </h1>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tI'm a full stack developer creating projects and writing about technologies.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t<div className=\"stamp\">\n\t\t\t\t\t\t\t\t<img src={mehwashImage} alt=\"Mehwash\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</center>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row center-align-div\">\n\t\t\t\t\t<div className=\"col-md-6 offset-md-1\">\n\t\t\t\t\t\t<h1>Latest Article</h1>\n\t\t\t\t\t\t<div id=\"retainable-rss-embed\" data-rss=\"https://medium.com/feed/@mehwash.patel90\" data-maxcols=\"1\"  data-layout=\"grid\" \ndata-poststyle=\"inline\" \ndata-readmore=\"Read the rest\" \ndata-buttonclass=\"btn btn-primary\" \ndata-offset=\"-100\"></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t<div className=\"stamp\">\n\t\t\t\t\t\t\t\t<img src={mehwashImage} alt=\"Mehwash\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</center>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</Container>\n\t\t\t</Styles>\n\t\t)\n\t}\n}","import React from \"react\"\n\nexport const About = () => (\n\t<div>\n\t\t<h2>Hello World!</h2>\n\t\t<p>This is about page</p>\n\t\t<p>How're you doing?</p>\n\t</div>\n)","import React from \"react\"\n\nexport const Portfolio = () => (\n\t<div>\n\t\t<h2>Hello World!</h2>\n\t\t<p>This is about page</p>\n\t\t<p>How're you doing?</p>\n\t</div>\n)","import React from \"react\"\n\nexport const Blog = () => (\n\t<div>\n\t\t<h2>Hello World!</h2>\n\t\t<p>This is about page</p>\n\t\t<p>How're you doing?</p>\n\t</div>\n)","import React from \"react\"\n\nexport const Contact = () => (\n\t<div>\n\t\t<h2>Hello World!</h2>\n\t\t<p>This is contact us page</p>\n\t\t<p>How're you doing?</p>\n\t</div>\n)","import React from \"react\"\n\nexport const NoMatch = () => (\n\t<div>\n\t\t<h2>Hello World!</h2>\n\t\t<p>This is no match page</p>\n\t</div>\n)","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\nexport const Layout = (props) => (\n\t<Container>\n\t\t{props.children}\n\t</Container>\n\t)","import React from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Styles = styled.div`\n\t.navbar {\n\t\tbackground-color: #DC938B;\n\t\tborder-bottom: 5px solid #AEC5A5;\n\t}\n\n\t.navbar-brand, .navbar-nav .nav-link {\n\t\tcolor: #F0EDDA;\n\t\tfont-weight: 600;\n\t\tletter-spacing: 1px;\n\n\t\t&:hover {\n\t\t\tcolor: #AEC5A5;\n\t\t}\n\t}\n\n\t.navbar-brand {\n\t\tmargin-right: 3rem;\n\t}\n\n\t.navbar-nav .nav-link.active, .navbar-light .navbar-nav .nav-link.show {\n    color: #AEC5A5;\n}\n`;\n\nexport const NavigationBar = props => {\n  const { location } = props;\n  return (\n\t<Styles>\n\t\t<Navbar expand=\"lg\" fixed=\"top\">\n\t\t\t<Navbar.Brand href=\"/\">Mehwash Patel</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t<Nav className=\"mr-auto\" activeKey={location.pathname}>\n\t\t\t\t\t<Nav.Item><Nav.Link href=\"/about\">About me</Nav.Link></Nav.Item>\n\t\t\t\t\t<Nav.Item><Nav.Link href=\"/portfolio\">Portfolio</Nav.Link></Nav.Item>\n\t\t\t\t\t<Nav.Item><Nav.Link href=\"/blog\">Articles</Nav.Link></Nav.Item>\n\t\t\t\t\t<Nav.Item><Nav.Link href=\"/contact\">Contact</Nav.Link></Nav.Item>\n\t\t\t\t</Nav>\n\n\t\t\t\t<Nav className=\"ml-auto\">\n\t\t\t\t\t<Nav.Item><Nav.Link href=\"https://www.linkedin.com/in/mehwash-patel-47b9b83a/\" target=\"_blank\"><FontAwesomeIcon icon={['fab', 'linkedin']} /></Nav.Link></Nav.Item>\n\t\t\t\t\t<Nav.Item><Nav.Link href=\"https://github.com/mehwashpatel\" target=\"_blank\"><FontAwesomeIcon icon={['fab', 'github']} /></Nav.Link></Nav.Item>\n\t\t\t\t\t<Nav.Item><Nav.Link href=\"https://medium.com/@mehwash.patel90\" target=\"_blank\"><FontAwesomeIcon icon={['fab', 'medium']} /></Nav.Link></Nav.Item>\n\t\t\t\t\t<Nav.Item><Nav.Link href=\"https://www.instagram.com/mehwashabdulsalam/\" target=\"_blank\"><FontAwesomeIcon icon={['fab', 'instagram']} /></Nav.Link></Nav.Item>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t</Styles>\n\t)\n}","import React from 'react';\nimport {Jumbotron as Jumbo, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n\t.jumbo {\n\t\tbackground: inherit;\n\t\theight: 100px;\n\t\tposition: relative;\n\t\tz-index: -2;\n\t}\n\n\t.overlay {\n\t\t\n\t\topacity: 0.6;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tz-index: -1;\n\t}\n`;\n\nexport const Jumbotron = () => (\n\t<Styles>\n\t\t<Jumbo fluid className=\"jumbo\">\n\t\t\t<div className=\"overlay\"></div>\n\t\t\t<Container>\n\t\t\t\t\n\t\t\t</Container>\n\t\t</Jumbo>\n\t</Styles>\n)","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {Home} from './Home';\nimport {About} from './About';\nimport {Portfolio} from './Portfolio';\nimport {Blog} from './Blog';\nimport {Contact} from './Contact';\nimport {NoMatch} from './NoMatch';\nimport {Layout} from './components/Layout';\nimport {NavigationBar} from './components/NavigationBar';\nimport {Jumbotron} from './components/Jumbotron';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from \"react-router\";\n\n \nlibrary.add(fab, faCheckSquare, faCoffee)\n\nconst HeaderWithRouter = withRouter(NavigationBar);\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Jumbotron />\n      <Layout>\n        <Router>\n          <HeaderWithRouter />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/portfolio\" component={Portfolio} />\n            <Route path=\"/blog\" component={Blog} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route component={NoMatch} />\n          </Switch>\n        </Router>\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}